# Этап 1: Компиляция/сборка
# Создаем новый этап сборки образа
# Используем базовый образ GCC для компиляции приложения
# С помощью AS build называем этот этап "build"
FROM gcc AS build

# Устанавливаем рабочую директорию в /app внутри контейнера
#Это место, где мы будем выполнять все последующие команды
WORKDIR /app

# Копируем все файлы из текущего каталога хоста (где находится Dockerfile) внутрь контейнера в текущую рабочую директорию
COPY . .

# Компиляция исходного кода main.cpp в исполняемый файл hello_world
RUN g++ -o hello_world main.cpp

# Этап 2: Копирование артефакта компиляции и запуск приложения
# Используем легковесный образ Alpine Linux в качестве базового образа для создания окружения выполнения
FROM alpine AS run
WORKDIR /app
# Копируем исполняемый файл hello_world из первого этапа сборки (builder) в текущую рабочую директорию во втором этапе сборки
COPY --from=build /app/hello_world /app/hello_world

CMD ["./hello_world"]